# 机场订阅
proxy-providers:
  YKK:
    url: "https://cloud.ykkk.tech/api/v1/client/subscribe?token=6441910d4b9c73e7c4e8f15d6fc98c25"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连

proxies:
  - {name: 直连, type: direct}

# 全局配置 
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
allow-lan: true
bind-address: "*"
ipv6: false
unified-delay: true
tcp-concurrent: true
log-level: warning
find-process-mode: 'off'
# interface-name: en0
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15
disable-keep-alive: false
profile:
  store-selected: true
  store-fake-ip: true

# 控制面板
external-controller: 0.0.0.0:9090
secret: ""
external-ui: "ui"
external-ui-name: zashboard
external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"


# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:7874
  ipv6: false
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:cn_domain"
    - "time.*.com"
  default-nameserver:
    - 223.5.5.5
  proxy-server-nameserver:
    - https://223.5.5.5/dns-query
  # namesever尽量用运营商提供的DNS
  nameserver:
    - 183.221.253.100
    - 211.137.96.205
 
# 出站策略
# 注意锚点必须放在引用的上方，可以集中把锚点全部放yaml的顶部。
pr: &pr {type: select, proxies: [香港故转,日本故转,加坡故转,美国自动,其他地区,家宽节点,高速节点,便宜节点,直连]}
proxy-groups:
  - {name: 默认代理, <<: *pr}
  - {name: YouTube, <<: *pr}
  - {name: Google, <<: *pr}
  - {name: Telegram, <<: *pr}
  - {name: HBO, <<: *pr}
  - {name: Primevideo, <<: *pr}
  - {name: NETFLIX, <<: *pr}
  - {name: PS5, <<: *pr}
  - {name: Disney, <<: *pr}
  - {name: AppleTV, <<: *pr}
  - {name: 全球直连, <<: *pr}
  - {name: 🐟 漏网之鱼, <<: *pr}
  - {name: 香港故转, type: fallback, include-all: true, tolerance: 50, interval: 300, filter: "(?=.*(香港|HK|Hong Kong|🇭🇰|HongKong))^((?!(深港|家宽|游戏|剩余|流量|2.0|2倍|2x|3.0|3倍|3x|4.0|4倍|4x|5.0|5倍)).)*$"}
  - {name: 日本故转, type: fallback, include-all: true, tolerance: 50, interval: 300, filter: "(?=.*(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan))^((?!(家宽|游戏|剩余|流量|2.0|2倍|2x|3.0|3倍|3x|4.0|4倍|4x|5.0|5倍|5x)).)*$" }
  - {name: 加坡故转, type: fallback, include-all: true, tolerance: 50, interval: 300, filter: "(?=.*(新加坡|坡|狮城|SG|Singapore))^((?!(家宽|游戏|剩余|流量|2.0|2倍|2x|3.0|3倍|3x|4.0|4倍|4x|5.0|5倍|5x)).)*$"}
  - {name: 美国自动, type: fallback, include-all: true, tolerance: 50, interval: 300, filter: "(?=.*美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States|UnitedStates)).)*$"}
  - {name: 其他地区, type: select, include-all: true, filter: "^((?!(剩余|香港|HK|Hong Kong|🇭🇰|HongKong|台湾|台|Taiwan|TW|日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan|新加坡|坡|狮城|SG|Singapore||UnitedStates|美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States)).)*$"}
  - {name: 家宽节点, type: select, include-all: true, filter: "(?i)家宽|家庭"}
  - {name: 高速节点, type: select, include-all: true, filter: "(?i)专线|沪日|深日|深港|沪港|IEPL"}
  - {name: 便宜节点, type: url-test, include-all: true, tolerance: 50, interval: 300, filter: "(?i)0.1|0.1x|0.2|0.2倍|0.2x|0.5|0.5倍|0.5x"}
# 规则匹配
rules:
  - RULE-SET,netflix_domain, NETFLIX
  - RULE-SET,youtube_domain, YouTube
  - RULE-SET,hbo,HBO
  - RULE-SET,primevideo_domain,Primevideo
  - RULE-SET,appletv_domain, AppleTV
  - RULE-SET,Disney_domain, Disney
  - RULE-SET,telegram_domain, Telegram
  - RULE-SET,google_domain, Google
  - RULE-SET,playstation_domain, PS5
  - RULE-SET,steam@cn_domain, 全球直连
  - RULE-SET,proxylite, 默认代理
  - RULE-SET,gfw_domain,  默认代理
  - RULE-SET,cn_domain, 全球直连
  - RULE-SET,google_ip, Google,no-resolve
  - RULE-SET,netflix_ip, NETFLIX,no-resolve
  - RULE-SET,telegram_ip, Telegram,no-resolve
  - RULE-SET,cn_ip,全球直连
  - MATCH,🐟 漏网之鱼

# 规则集
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
rule-providers: 
  netflix_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  youtube_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  hbo_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/hbo.mrs"}
  primevideo_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/primevideo.mrs"}
  appletv_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/apple-tvplus.mrs"}
  Disney_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/disney.mrs"}
  telegram_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  google_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  playstation_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/playstation.mrs"}
  steam@cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/steam@cn.mrs"} 
  proxylite: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo-lite/geosite/proxy.mrs"}
  gfw_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  cn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  google_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  telegram_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  netflix_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
